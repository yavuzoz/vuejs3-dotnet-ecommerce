// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250227210336_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            IsActive = true,
                            Name = "Product 1",
                            PictureUrl = "url1.jpg",
                            Price = 100m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            IsActive = true,
                            Name = "Product 2",
                            PictureUrl = "url2.jpg",
                            Price = 200m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description 3",
                            IsActive = true,
                            Name = "Product 3",
                            PictureUrl = "url3.jpg",
                            Price = 300m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description 4",
                            IsActive = false,
                            Name = "Product 4",
                            PictureUrl = "url4.jpg",
                            Price = 400m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description 5",
                            IsActive = true,
                            Name = "Product 5",
                            PictureUrl = "url5.jpg",
                            Price = 500m,
                            Stock = 50
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
